/* soapCS8ServerV2Proxy.cpp
   Generated by gSOAP 2.8.52 for CS8Server.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "../soapCS8ServerV2Proxy.h"

CS8ServerV2Proxy::CS8ServerV2Proxy()
{	this->soap = soap_new();
	this->soap_own = true;
	CS8ServerV2Proxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

CS8ServerV2Proxy::CS8ServerV2Proxy(const CS8ServerV2Proxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

CS8ServerV2Proxy::CS8ServerV2Proxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	CS8ServerV2Proxy_init(_soap->imode, _soap->omode);
}

CS8ServerV2Proxy::CS8ServerV2Proxy(const char *endpoint)
{	this->soap = soap_new();
	this->soap_own = true;
	CS8ServerV2Proxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

CS8ServerV2Proxy::CS8ServerV2Proxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	CS8ServerV2Proxy_init(iomode, iomode);
}

CS8ServerV2Proxy::CS8ServerV2Proxy(const char *endpoint, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	CS8ServerV2Proxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

CS8ServerV2Proxy::CS8ServerV2Proxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	CS8ServerV2Proxy_init(imode, omode);
}

CS8ServerV2Proxy::~CS8ServerV2Proxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void CS8ServerV2Proxy::CS8ServerV2Proxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"ns2", "urn:CS8ServerV1", NULL, NULL},
        {"ns5", "http://tempuri.org/xmlmime.xsd", NULL, NULL},
        {"ns3", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"ns4", "http://www.w3.org/2004/11/xmlmime", NULL, NULL},
        {"ns1", "CS8ServerV0", NULL, NULL},
        {"ns7", "urn:CS8ServerV2", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

CS8ServerV2Proxy *CS8ServerV2Proxy::copy()
{	CS8ServerV2Proxy *dup = SOAP_NEW_COPY(CS8ServerV2Proxy);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}

CS8ServerV2Proxy& CS8ServerV2Proxy::operator=(const CS8ServerV2Proxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void CS8ServerV2Proxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void CS8ServerV2Proxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	CS8ServerV2Proxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void CS8ServerV2Proxy::soap_noheader()
{	this->soap->header = NULL;
}

void CS8ServerV2Proxy::soap_header(int *ns1__sessionId)
{	::soap_header(this->soap);
	this->soap->header->ns1__sessionId = ns1__sessionId;
}

::SOAP_ENV__Header *CS8ServerV2Proxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *CS8ServerV2Proxy::soap_fault()
{	return this->soap->fault;
}

const char *CS8ServerV2Proxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *CS8ServerV2Proxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int CS8ServerV2Proxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int CS8ServerV2Proxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void CS8ServerV2Proxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void CS8ServerV2Proxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *CS8ServerV2Proxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int CS8ServerV2Proxy::setBreakpoints(const char *endpoint, const char *soap_action, _ns7__setBreakpoints *ns7__setBreakpoints, _ns7__setBreakpointsResponse *ns7__setBreakpointsResponse)
{	struct soap *soap = this->soap;
	struct __ns7__setBreakpoints soap_tmp___ns7__setBreakpoints;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__setBreakpoints.ns7__setBreakpoints = ns7__setBreakpoints;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__setBreakpoints(soap, &soap_tmp___ns7__setBreakpoints);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__setBreakpoints(soap, &soap_tmp___ns7__setBreakpoints, "-ns7:setBreakpoints", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__setBreakpoints(soap, &soap_tmp___ns7__setBreakpoints, "-ns7:setBreakpoints", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__setBreakpointsResponse)
		return soap_closesock(soap);
	ns7__setBreakpointsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__setBreakpointsResponse->soap_get(soap, "ns7:setBreakpointsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::getBreakpoints(const char *endpoint, const char *soap_action, _ns7__getBreakpoints *ns7__getBreakpoints, _ns7__getBreakpointsResponse *ns7__getBreakpointsResponse)
{	struct soap *soap = this->soap;
	struct __ns7__getBreakpoints soap_tmp___ns7__getBreakpoints;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__getBreakpoints.ns7__getBreakpoints = ns7__getBreakpoints;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__getBreakpoints(soap, &soap_tmp___ns7__getBreakpoints);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__getBreakpoints(soap, &soap_tmp___ns7__getBreakpoints, "-ns7:getBreakpoints", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__getBreakpoints(soap, &soap_tmp___ns7__getBreakpoints, "-ns7:getBreakpoints", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__getBreakpointsResponse)
		return soap_closesock(soap);
	ns7__getBreakpointsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__getBreakpointsResponse->soap_get(soap, "ns7:getBreakpointsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::clearBreakpoints(const char *endpoint, const char *soap_action, _ns7__clearBreakpoints *ns7__clearBreakpoints, _ns7__clearBreakpointsResponse *ns7__clearBreakpointsResponse)
{	struct soap *soap = this->soap;
	struct __ns7__clearBreakpoints soap_tmp___ns7__clearBreakpoints;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__clearBreakpoints.ns7__clearBreakpoints = ns7__clearBreakpoints;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__clearBreakpoints(soap, &soap_tmp___ns7__clearBreakpoints);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__clearBreakpoints(soap, &soap_tmp___ns7__clearBreakpoints, "-ns7:clearBreakpoints", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__clearBreakpoints(soap, &soap_tmp___ns7__clearBreakpoints, "-ns7:clearBreakpoints", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__clearBreakpointsResponse)
		return soap_closesock(soap);
	ns7__clearBreakpointsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__clearBreakpointsResponse->soap_get(soap, "ns7:clearBreakpointsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::clearAllBreakpoints(const char *endpoint, const char *soap_action, _ns7__clearAllBreakpoints *ns7__clearAllBreakpoints, _ns7__clearAllBreakpointsResponse *ns7__clearAllBreakpointsResponse)
{	struct soap *soap = this->soap;
	struct __ns7__clearAllBreakpoints soap_tmp___ns7__clearAllBreakpoints;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__clearAllBreakpoints.ns7__clearAllBreakpoints = ns7__clearAllBreakpoints;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__clearAllBreakpoints(soap, &soap_tmp___ns7__clearAllBreakpoints);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__clearAllBreakpoints(soap, &soap_tmp___ns7__clearAllBreakpoints, "-ns7:clearAllBreakpoints", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__clearAllBreakpoints(soap, &soap_tmp___ns7__clearAllBreakpoints, "-ns7:clearAllBreakpoints", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__clearAllBreakpointsResponse)
		return soap_closesock(soap);
	ns7__clearAllBreakpointsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__clearAllBreakpointsResponse->soap_get(soap, "ns7:clearAllBreakpointsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::getTasks(const char *endpoint, const char *soap_action, _ns7__getTasks *ns7__getTasks, _ns7__getTasksResponse *ns7__getTasksResponse)
{	struct soap *soap = this->soap;
	struct __ns7__getTasks soap_tmp___ns7__getTasks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__getTasks.ns7__getTasks = ns7__getTasks;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__getTasks(soap, &soap_tmp___ns7__getTasks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__getTasks(soap, &soap_tmp___ns7__getTasks, "-ns7:getTasks", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__getTasks(soap, &soap_tmp___ns7__getTasks, "-ns7:getTasks", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__getTasksResponse)
		return soap_closesock(soap);
	ns7__getTasksResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__getTasksResponse->soap_get(soap, "ns7:getTasksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::taskSuspend(const char *endpoint, const char *soap_action, _ns7__taskSuspend *ns7__taskSuspend, _ns7__taskSuspendResponse *ns7__taskSuspendResponse)
{	struct soap *soap = this->soap;
	struct __ns7__taskSuspend soap_tmp___ns7__taskSuspend;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__taskSuspend.ns7__taskSuspend = ns7__taskSuspend;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__taskSuspend(soap, &soap_tmp___ns7__taskSuspend);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__taskSuspend(soap, &soap_tmp___ns7__taskSuspend, "-ns7:taskSuspend", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__taskSuspend(soap, &soap_tmp___ns7__taskSuspend, "-ns7:taskSuspend", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__taskSuspendResponse)
		return soap_closesock(soap);
	ns7__taskSuspendResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__taskSuspendResponse->soap_get(soap, "ns7:taskSuspendResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::taskResume(const char *endpoint, const char *soap_action, _ns7__taskResume *ns7__taskResume, _ns7__taskResumeResponse *ns7__taskResumeResponse)
{	struct soap *soap = this->soap;
	struct __ns7__taskResume soap_tmp___ns7__taskResume;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__taskResume.ns7__taskResume = ns7__taskResume;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__taskResume(soap, &soap_tmp___ns7__taskResume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__taskResume(soap, &soap_tmp___ns7__taskResume, "-ns7:taskResume", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__taskResume(soap, &soap_tmp___ns7__taskResume, "-ns7:taskResume", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__taskResumeResponse)
		return soap_closesock(soap);
	ns7__taskResumeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__taskResumeResponse->soap_get(soap, "ns7:taskResumeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::taskKill(const char *endpoint, const char *soap_action, _ns7__taskKill *ns7__taskKill, _ns7__taskKillResponse *ns7__taskKillResponse)
{	struct soap *soap = this->soap;
	struct __ns7__taskKill soap_tmp___ns7__taskKill;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__taskKill.ns7__taskKill = ns7__taskKill;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__taskKill(soap, &soap_tmp___ns7__taskKill);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__taskKill(soap, &soap_tmp___ns7__taskKill, "-ns7:taskKill", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__taskKill(soap, &soap_tmp___ns7__taskKill, "-ns7:taskKill", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__taskKillResponse)
		return soap_closesock(soap);
	ns7__taskKillResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__taskKillResponse->soap_get(soap, "ns7:taskKillResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::taskStep(const char *endpoint, const char *soap_action, _ns7__taskStep *ns7__taskStep, _ns7__taskStepResponse *ns7__taskStepResponse)
{	struct soap *soap = this->soap;
	struct __ns7__taskStep soap_tmp___ns7__taskStep;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__taskStep.ns7__taskStep = ns7__taskStep;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__taskStep(soap, &soap_tmp___ns7__taskStep);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__taskStep(soap, &soap_tmp___ns7__taskStep, "-ns7:taskStep", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__taskStep(soap, &soap_tmp___ns7__taskStep, "-ns7:taskStep", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__taskStepResponse)
		return soap_closesock(soap);
	ns7__taskStepResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__taskStepResponse->soap_get(soap, "ns7:taskStepResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::subscribeToControllerEvents(const char *endpoint, const char *soap_action, _ns7__subscribeToControllerEvents *ns7__subscribeToControllerEvents, _ns7__subscribeResponse *ns7__subscribeResponse)
{	struct soap *soap = this->soap;
	struct __ns7__subscribeToControllerEvents soap_tmp___ns7__subscribeToControllerEvents;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__subscribeToControllerEvents.ns7__subscribeToControllerEvents = ns7__subscribeToControllerEvents;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__subscribeToControllerEvents(soap, &soap_tmp___ns7__subscribeToControllerEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__subscribeToControllerEvents(soap, &soap_tmp___ns7__subscribeToControllerEvents, "-ns7:subscribeToControllerEvents", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__subscribeToControllerEvents(soap, &soap_tmp___ns7__subscribeToControllerEvents, "-ns7:subscribeToControllerEvents", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__subscribeResponse)
		return soap_closesock(soap);
	ns7__subscribeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__subscribeResponse->soap_get(soap, "ns7:subscribeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::unsubscribeToControllerEvents(const char *endpoint, const char *soap_action, _ns7__unsubscribeToControllerEvents *ns7__unsubscribeToControllerEvents, _ns7__unsubscribeResponse *ns7__unsubscribeResponse)
{	struct soap *soap = this->soap;
	struct __ns7__unsubscribeToControllerEvents soap_tmp___ns7__unsubscribeToControllerEvents;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__unsubscribeToControllerEvents.ns7__unsubscribeToControllerEvents = ns7__unsubscribeToControllerEvents;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__unsubscribeToControllerEvents(soap, &soap_tmp___ns7__unsubscribeToControllerEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__unsubscribeToControllerEvents(soap, &soap_tmp___ns7__unsubscribeToControllerEvents, "-ns7:unsubscribeToControllerEvents", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__unsubscribeToControllerEvents(soap, &soap_tmp___ns7__unsubscribeToControllerEvents, "-ns7:unsubscribeToControllerEvents", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__unsubscribeResponse)
		return soap_closesock(soap);
	ns7__unsubscribeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__unsubscribeResponse->soap_get(soap, "ns7:unsubscribeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::getCallStack(const char *endpoint, const char *soap_action, _ns7__getCallStack *ns7__getCallStack, _ns7__getCallStackResponse *ns7__getCallStackResponse)
{	struct soap *soap = this->soap;
	struct __ns7__getCallStack soap_tmp___ns7__getCallStack;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__getCallStack.ns7__getCallStack = ns7__getCallStack;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__getCallStack(soap, &soap_tmp___ns7__getCallStack);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__getCallStack(soap, &soap_tmp___ns7__getCallStack, "-ns7:getCallStack", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__getCallStack(soap, &soap_tmp___ns7__getCallStack, "-ns7:getCallStack", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__getCallStackResponse)
		return soap_closesock(soap);
	ns7__getCallStackResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__getCallStackResponse->soap_get(soap, "ns7:getCallStackResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::getStackFrame(const char *endpoint, const char *soap_action, _ns7__getStackFrame *ns7__getStackFrame, _ns7__getStackFrameResponse *ns7__getStackFrameResponse)
{	struct soap *soap = this->soap;
	struct __ns7__getStackFrame soap_tmp___ns7__getStackFrame;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__getStackFrame.ns7__getStackFrame = ns7__getStackFrame;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__getStackFrame(soap, &soap_tmp___ns7__getStackFrame);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__getStackFrame(soap, &soap_tmp___ns7__getStackFrame, "-ns7:getStackFrame", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__getStackFrame(soap, &soap_tmp___ns7__getStackFrame, "-ns7:getStackFrame", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__getStackFrameResponse)
		return soap_closesock(soap);
	ns7__getStackFrameResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__getStackFrameResponse->soap_get(soap, "ns7:getStackFrameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::getWatches(const char *endpoint, const char *soap_action, _ns7__getWatches *ns7__getWatches, _ns7__getWatchResponse *ns7__getWatchResponse)
{	struct soap *soap = this->soap;
	struct __ns7__getWatches soap_tmp___ns7__getWatches;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__getWatches.ns7__getWatches = ns7__getWatches;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__getWatches(soap, &soap_tmp___ns7__getWatches);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__getWatches(soap, &soap_tmp___ns7__getWatches, "-ns7:getWatches", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__getWatches(soap, &soap_tmp___ns7__getWatches, "-ns7:getWatches", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__getWatchResponse)
		return soap_closesock(soap);
	ns7__getWatchResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__getWatchResponse->soap_get(soap, "ns7:getWatchResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::execVal3(const char *endpoint, const char *soap_action, _ns7__execVal3 *ns7__execVal3, _ns7__execVal3Response *ns7__execVal3Response)
{	struct soap *soap = this->soap;
	struct __ns7__execVal3 soap_tmp___ns7__execVal3;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__execVal3.ns7__execVal3 = ns7__execVal3;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__execVal3(soap, &soap_tmp___ns7__execVal3);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__execVal3(soap, &soap_tmp___ns7__execVal3, "-ns7:execVal3", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__execVal3(soap, &soap_tmp___ns7__execVal3, "-ns7:execVal3", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__execVal3Response)
		return soap_closesock(soap);
	ns7__execVal3Response->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__execVal3Response->soap_get(soap, "ns7:execVal3Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::setProjectAsModified(const char *endpoint, const char *soap_action, _ns7__setProjectAsModified *ns7__setProjectAsModified, _ns7__setProjectAsModifiedResponse *ns7__setProjectAsModifiedResponse)
{	struct soap *soap = this->soap;
	struct __ns7__setProjectAsModified soap_tmp___ns7__setProjectAsModified;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__setProjectAsModified.ns7__setProjectAsModified = ns7__setProjectAsModified;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__setProjectAsModified(soap, &soap_tmp___ns7__setProjectAsModified);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__setProjectAsModified(soap, &soap_tmp___ns7__setProjectAsModified, "-ns7:setProjectAsModified", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__setProjectAsModified(soap, &soap_tmp___ns7__setProjectAsModified, "-ns7:setProjectAsModified", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__setProjectAsModifiedResponse)
		return soap_closesock(soap);
	ns7__setProjectAsModifiedResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__setProjectAsModifiedResponse->soap_get(soap, "ns7:setProjectAsModifiedResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::setCurrentInstruction(const char *endpoint, const char *soap_action, _ns7__setCurrentInstruction *ns7__setCurrentInstruction, _ns7__setCurrentInstructionResponse *ns7__setCurrentInstructionResponse)
{	struct soap *soap = this->soap;
	struct __ns7__setCurrentInstruction soap_tmp___ns7__setCurrentInstruction;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__setCurrentInstruction.ns7__setCurrentInstruction = ns7__setCurrentInstruction;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__setCurrentInstruction(soap, &soap_tmp___ns7__setCurrentInstruction);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__setCurrentInstruction(soap, &soap_tmp___ns7__setCurrentInstruction, "-ns7:setCurrentInstruction", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__setCurrentInstruction(soap, &soap_tmp___ns7__setCurrentInstruction, "-ns7:setCurrentInstruction", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__setCurrentInstructionResponse)
		return soap_closesock(soap);
	ns7__setCurrentInstructionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__setCurrentInstructionResponse->soap_get(soap, "ns7:setCurrentInstructionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::replaceLine(const char *endpoint, const char *soap_action, _ns7__replaceLine *ns7__replaceLine, _ns7__replaceLineResponse *ns7__replaceLineResponse)
{	struct soap *soap = this->soap;
	struct __ns7__replaceLine soap_tmp___ns7__replaceLine;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__replaceLine.ns7__replaceLine = ns7__replaceLine;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__replaceLine(soap, &soap_tmp___ns7__replaceLine);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__replaceLine(soap, &soap_tmp___ns7__replaceLine, "-ns7:replaceLine", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__replaceLine(soap, &soap_tmp___ns7__replaceLine, "-ns7:replaceLine", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__replaceLineResponse)
		return soap_closesock(soap);
	ns7__replaceLineResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__replaceLineResponse->soap_get(soap, "ns7:replaceLineResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::readIos(const char *endpoint, const char *soap_action, _ns7__readIos *ns7__readIos, _ns7__readIosResponse *ns7__readIosResponse)
{	struct soap *soap = this->soap;
	struct __ns7__readIos soap_tmp___ns7__readIos;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__readIos.ns7__readIos = ns7__readIos;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__readIos(soap, &soap_tmp___ns7__readIos);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__readIos(soap, &soap_tmp___ns7__readIos, "-ns7:readIos", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__readIos(soap, &soap_tmp___ns7__readIos, "-ns7:readIos", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__readIosResponse)
		return soap_closesock(soap);
	ns7__readIosResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__readIosResponse->soap_get(soap, "ns7:readIosResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::writeIos(const char *endpoint, const char *soap_action, _ns7__writeIos *ns7__writeIos, _ns7__writeIosResponse *ns7__writeIosResponse)
{	struct soap *soap = this->soap;
	struct __ns7__writeIos soap_tmp___ns7__writeIos;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__writeIos.ns7__writeIos = ns7__writeIos;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__writeIos(soap, &soap_tmp___ns7__writeIos);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__writeIos(soap, &soap_tmp___ns7__writeIos, "-ns7:writeIos", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__writeIos(soap, &soap_tmp___ns7__writeIos, "-ns7:writeIos", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__writeIosResponse)
		return soap_closesock(soap);
	ns7__writeIosResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__writeIosResponse->soap_get(soap, "ns7:writeIosResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::lockIos(const char *endpoint, const char *soap_action, _ns7__lockIos *ns7__lockIos, _ns7__lockIosResponse *ns7__lockIosResponse)
{	struct soap *soap = this->soap;
	struct __ns7__lockIos soap_tmp___ns7__lockIos;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__lockIos.ns7__lockIos = ns7__lockIos;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__lockIos(soap, &soap_tmp___ns7__lockIos);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__lockIos(soap, &soap_tmp___ns7__lockIos, "-ns7:lockIos", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__lockIos(soap, &soap_tmp___ns7__lockIos, "-ns7:lockIos", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__lockIosResponse)
		return soap_closesock(soap);
	ns7__lockIosResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__lockIosResponse->soap_get(soap, "ns7:lockIosResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::unlockIos(const char *endpoint, const char *soap_action, _ns7__unlockIos *ns7__unlockIos, _ns7__unlockIosResponse *ns7__unlockIosResponse)
{	struct soap *soap = this->soap;
	struct __ns7__unlockIos soap_tmp___ns7__unlockIos;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__unlockIos.ns7__unlockIos = ns7__unlockIos;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__unlockIos(soap, &soap_tmp___ns7__unlockIos);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__unlockIos(soap, &soap_tmp___ns7__unlockIos, "-ns7:unlockIos", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__unlockIos(soap, &soap_tmp___ns7__unlockIos, "-ns7:unlockIos", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__unlockIosResponse)
		return soap_closesock(soap);
	ns7__unlockIosResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__unlockIosResponse->soap_get(soap, "ns7:unlockIosResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::lockAllIos(const char *endpoint, const char *soap_action, _ns7__lockAllIos *ns7__lockAllIos, _ns7__SoapAllPhysicalIoResponse *ns7__SoapAllPhysicalIoResponse)
{	struct soap *soap = this->soap;
	struct __ns7__lockAllIos soap_tmp___ns7__lockAllIos;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__lockAllIos.ns7__lockAllIos = ns7__lockAllIos;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__lockAllIos(soap, &soap_tmp___ns7__lockAllIos);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__lockAllIos(soap, &soap_tmp___ns7__lockAllIos, "-ns7:lockAllIos", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__lockAllIos(soap, &soap_tmp___ns7__lockAllIos, "-ns7:lockAllIos", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__SoapAllPhysicalIoResponse)
		return soap_closesock(soap);
	ns7__SoapAllPhysicalIoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__SoapAllPhysicalIoResponse->soap_get(soap, "ns7:SoapAllPhysicalIoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::unlockAllIos(const char *endpoint, const char *soap_action, _ns7__unlockAllIos *ns7__unlockAllIos, _ns7__SoapAllPhysicalIoResponse *ns7__SoapAllPhysicalIoResponse)
{	struct soap *soap = this->soap;
	struct __ns7__unlockAllIos soap_tmp___ns7__unlockAllIos;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__unlockAllIos.ns7__unlockAllIos = ns7__unlockAllIos;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__unlockAllIos(soap, &soap_tmp___ns7__unlockAllIos);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__unlockAllIos(soap, &soap_tmp___ns7__unlockAllIos, "-ns7:unlockAllIos", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__unlockAllIos(soap, &soap_tmp___ns7__unlockAllIos, "-ns7:unlockAllIos", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__SoapAllPhysicalIoResponse)
		return soap_closesock(soap);
	ns7__SoapAllPhysicalIoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__SoapAllPhysicalIoResponse->soap_get(soap, "ns7:SoapAllPhysicalIoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::getAllPhysicalIos(const char *endpoint, const char *soap_action, _ns7__getAllPhysicalIos *ns7__getAllPhysicalIos, _ns7__getAllPhysicalIosResponse *ns7__getAllPhysicalIosResponse)
{	struct soap *soap = this->soap;
	struct __ns7__getAllPhysicalIos soap_tmp___ns7__getAllPhysicalIos;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__getAllPhysicalIos.ns7__getAllPhysicalIos = ns7__getAllPhysicalIos;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__getAllPhysicalIos(soap, &soap_tmp___ns7__getAllPhysicalIos);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__getAllPhysicalIos(soap, &soap_tmp___ns7__getAllPhysicalIos, "-ns7:getAllPhysicalIos", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__getAllPhysicalIos(soap, &soap_tmp___ns7__getAllPhysicalIos, "-ns7:getAllPhysicalIos", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__getAllPhysicalIosResponse)
		return soap_closesock(soap);
	ns7__getAllPhysicalIosResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__getAllPhysicalIosResponse->soap_get(soap, "ns7:getAllPhysicalIosResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::getRobotDhParameters(const char *endpoint, const char *soap_action, _ns7__getRobotDhParameters *ns7__getRobotDhParameters, _ns7__SoapRobotDhParameters *ns7__SoapRobotDhParameters)
{	struct soap *soap = this->soap;
	struct __ns7__getRobotDhParameters soap_tmp___ns7__getRobotDhParameters;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__getRobotDhParameters.ns7__getRobotDhParameters = ns7__getRobotDhParameters;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__getRobotDhParameters(soap, &soap_tmp___ns7__getRobotDhParameters);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__getRobotDhParameters(soap, &soap_tmp___ns7__getRobotDhParameters, "-ns7:getRobotDhParameters", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__getRobotDhParameters(soap, &soap_tmp___ns7__getRobotDhParameters, "-ns7:getRobotDhParameters", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__SoapRobotDhParameters)
		return soap_closesock(soap);
	ns7__SoapRobotDhParameters->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__SoapRobotDhParameters->soap_get(soap, "ns7:SoapRobotDhParameters", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CS8ServerV2Proxy::getProject(const char *endpoint, const char *soap_action, _ns7__getProject *ns7__getProject, _ns7__getProjectResponse *ns7__getProjectResponse)
{	struct soap *soap = this->soap;
	struct __ns7__getProject soap_tmp___ns7__getProject;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:5653/CS8ServerV2";
	soap_tmp___ns7__getProject.ns7__getProject = ns7__getProject;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns7__getProject(soap, &soap_tmp___ns7__getProject);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__getProject(soap, &soap_tmp___ns7__getProject, "-ns7:getProject", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__getProject(soap, &soap_tmp___ns7__getProject, "-ns7:getProject", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__getProjectResponse)
		return soap_closesock(soap);
	ns7__getProjectResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__getProjectResponse->soap_get(soap, "ns7:getProjectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
